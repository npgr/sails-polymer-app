<head>
	<title>Listar Actividad</title>
	<script src="/bower_components/webcomponentsjs/webcomponents.min.js"></script>
	<script src="/bower_components/lokijs/src/lokijs.js"></script>
	<link rel="stylesheet" href="/styles/app.css">
	<link rel="import" href="/bower_components/paper-material/paper-material.html">
	<link rel="import" href="/bower_components/paper-input/paper-input.html">
	<link rel="import" href="/bower_components/paper-fab/paper-fab.html">
	<link rel="import" href="/bower_components/iron-icons/iron-icons.html">
	<link rel="import" href="/bower_components/paper-icon-button/paper-icon-button.html">
	<link rel="import" href="/bower_components/paper-button/paper-button.html">
	<link rel="import" href="/components/Task-new/Task-new.html">
	<link rel="import" href="/components/Task-display/Task-display.html">
	<link rel="import" href="/components/Task-edit/Task-edit.html">
	<link rel="import" href="/components/Task-delete/Task-delete.html">
	<link rel="import" href="/bower_components/iron-ajax/iron-ajax.html">
</head>
<style>
.card {
	width: 75em;
}
</style>
<dom-module id="Task-list">
<template>
	<iron-ajax id="ajax" url="/Task" handle-as="json" on-response="load_data" on-error="ajax_error"></iron-ajax>
	<Task-new id="Task_new_dialog" on-close="reload"></Task-new>
	<Task-display id="Task_display_dialog"></Task-display>
	<Task-edit id="Task_edit_dialog" on-close="reload"></Task-edit>
	<Task-delete id="Task_delete_dialog" on-close="reload"></Task-delete>
	
	<div class="card_title">Listar Actividad</div>
	<select id="filter" on-change="input_type">
		<option value="id">Id</option>
		<option value="activity">Actividad</option>
		<option value="finicio">Inicio</option>
		<option value="fcompromiso">Compromiso</option>
		<option value="responsable">Responsable</option>
		<option value="proyecto">Proyecto</option>
		<option value="ultseguimiento">Ult Seg</option>
		<option value="proxseguimiento">Prox Seg</option>
		<option value="observacion">observacion</option>
	</select>
	<select id="op">   
		<option value="$eq">Igual a</option>
		<option value="$ne">Diferente a</option>
		<option value="$contains">Contiene</option>
		<option value="$gte">Mayor o igual a</option>
		<option value="$lte">Menor o igual a</option>
	</select>
	<input id="filtro" type="{{tipo}}"></input>
	<select id="select" class="hide">
	  <template is="dom-repeat" items="{{opts}}">
		<option value="{{item.op}}">{{item.op}}</option>
	  </template>
	</select>
	<select id="logic" on-change="logic_operator">
		<option value="-">---</option>
		<option value="$and">And</option>
		<option value="$or">Or</option>
	</select>
	<paper-button class="btn" on-click="filter" raised>Buscar</paper-button>
	<br>
	<select id="filter2" class="hide" on-change="input_type2">
		<option value="id">Id</option>
		<option value="activity">Actividad</option>
		<option value="finicio">Inicio</option>
		<option value="fcompromiso">Compromiso</option>
		<option value="responsable">Responsable</option>
		<option value="proyecto">Proyecto</option>
		<option value="ultseguimiento">Ult Seg</option>
		<option value="proxseguimiento">Prox Seg</option>
		<option value="observacion">observacion</option>
	</select>
	<select id="op2" class="hide" >   
		<option value="$eq">Igual a</option>
		<option value="$contains">Contiene</option>
		<option value="$gte">Mayor o igual a</option>
		<option value="$lte">Menor o igual a</option>
	</select>
	<input id="filtro2" class="hide" type="{{tipo2}}"></input>
	<select id="select2" class="hide">
	  <template is="dom-repeat" items="{{opts2}}">
		<option value="{{item.op}}">{{item.op}}</option>
	  </template>
	</select>
	<paper-fab id="btn_add" mini on-click="new" icon="add"></paper-fab>
	<table class="table_list" style="width:100%">
	<thead>
	  <tr>
		<th class="ops"></th>
		<th class"col_id">Id</th>
		<th class"col_activity">Actividad</th>
		<th class"col_finicio">Inicio</th>
		<th class"col_fcompromiso">Compromiso</th>
		<th class"col_responsable">Responsable</th>
		<th class"col_proyecto">Proyecto</th>
		<th class"col_ultseguimiento">Ult Seg</th>
		<th class"col_proxseguimiento">Prox Seg</th>
		<th class"col_observacion">observacion</th>
	</tr>
	</thead>
	<tfoot>
	<tr>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td>Total</td>
		<td><strong>{{regs}}</strong></td>
	</tr>
	</tfoot>
	<tbody>
	<template is="dom-repeat" items="{{filtered_data}}">
	<tr>
		<td class="ops">
			<paper-icon-button id="{{item.id}}" on-click="display" class="icon-op" icon="visibility"></paper-icon-button>
			<paper-icon-button id="{{item.id}}" on-click="edit" class="icon-op" icon="create"></paper-icon-button>
		  	<paper-icon-button id="{{item.id}}" on-click="delete" class="icon-op" icon="cancel"></paper-icon-button>
		</td>
		<td class"col_id">{{item.id}}</td>
		<td class"col_activity">{{item.activity}}</td>
		<td class"col_finicio">{{date_dma(item.finicio)}}</td>
		<td class"col_fcompromiso">{{date_dma(item.fcompromiso)}}</td>
		<td class"col_responsable">{{item.responsable}}</td>
		<td class"col_proyecto">{{item.proyecto}}</td>
		<td class"col_ultseguimiento">{{date_dma(item.ultseguimiento)}}</td>
		<td class"col_proxseguimiento">{{date_dma(item.proxseguimiento)}}</td>
		<td class"col_observacion">{{item.observacion}}</td>
	</tr>
	</template>
	</tbody>
</table>
</template>
<script>
Polymer({
is: "Task-list",
	ready: function() {
		var _model = [{column: "id", type: "integer"},
				{column: "activity", type: "string"},
				{column: "finicio", type: "date"},
				{column: "fcompromiso", type: "date"},
				{column: "responsable", type: "string"},
				{column: "proyecto", type: "string"},
				{column: "ultseguimiento", type: "date"},
				{column: "proxseguimiento", type: "date"},
				{column: "observacion", type: "string"}
		]
		var _data = <%- data %>
		this.filtered_data = [{id: ""}]
		var db = new loki()
		this.data = db.addCollection("data")
		this.model = db.addCollection("model")
		for (i=0; i< _data.length ; i++){
		  if (_data[i].finicio)	
			_data[i].finicio = _data[i].finicio.substring(0,10)
		  if (_data[i].fcompromiso)	
			_data[i].fcompromiso = _data[i].fcompromiso.substring(0,10)
		  if (_data[i].ultseguimiento)	
			_data[i].ultseguimiento = _data[i].ultseguimiento.substring(0,10)
		  if (_data[i].proxseguimiento)
			_data[i].proxseguimiento = _data[i].proxseguimiento.substring(0,10)
			this.data.insert(_data[i])
		}
		for (i=0; i< _model.length ; i++)
			this.model.insert(_model[i])
		_data = {}
		_model = {}
		this.input_type()
	},
	date_dma: function(datex) {
		if (datex) {
			var year = datex.substring( 0, 4)
			var month = datex.substring( 5, 7)
			var day = datex.substring( 8, 10)
			return day+'/'+month+'/'+year
		}
		//else return ''
	},
	logic_operator: function() {
		if (this.$.logic.value == "-") {
			this.$.filter2.className = "hide"
			this.$.op2.className = "hide"
			this.$.filtro2.className = "hide"
			this.$.select2.className = "hide"
		} else
		{
			this.$.filter2.className = ""
			this.$.op2.className = ""
			this.input_type(2)
			//this.$.filtro2.className = ""
			//this.$.select2.className = ""
		}
	},
	filter: function() {
		var name = this.$.filter.value
		var op = this.$.op.value 
		var valor = {}
		var filtro = {}
		if (this.$.filtro.getAttribute("class") != "hide")
			if (this.$.filtro.getAttribute("type") == "number") 
				valor[op] = Number(this.$.filtro.value)
		 	else 
				valor[op] = this.$.filtro.value
		else 
			valor[op] = this.$.select.value
		filtro[name] = valor
		if (this.$.logic.value == "-")
			this.filtered_data = this.data.find(filtro)
		else
		{
			name = this.$.filter2.value
			op = this.$.op2.value
			valor = {}
			var logic_op = this.$.logic.value
			var filtro2 = {}
			if (this.$.filtro2.getAttribute("class") != "hide")
				if (this.$.filtro2.getAttribute("type") == "number") 
					valor[op] = Number(this.$.filtro2.value)
				else 
					valor[op] = this.$.filtro2.value
			else 
				valor[op] = this.$.select2.value
			filtro2[name] = valor
			var compose_filter = {}
			compose_filter[logic_op] = [filtro, filtro2]
			//console.log (compose_filter)
			this.filtered_data = this.data.find(compose_filter)
		}
		
		this.regs = this.filtered_data.length + " reg"
	},
	input_type2: function() {
		this.input_type(2)
	},
	input_type: function(n) {
	if (n!= 2)
	{
		this.$.filtro.value = ""
		var column = this.model.find({ "column": this.$.filter.value})
	} 
	else
	{
		this.$.filtro2.value = ""
		var column = this.model.find({ "column": this.$.filter2.value})
	}
	if (column[0].type)
	{
		var tipo = ""
		switch(column[0].type) {
		case "string":
			tipo = "text"
		break;
		case "integer":
			tipo = "number"
		break;
		case "float":
			tipo = "number"
		break;
		case "date":
			tipo = "date"
		break;
		default:
			tipo = "text"
		}
		if (n!= 2)
		{
			this.$.select.className = "hide"
			this.$.filtro.className = ""
			this.tipo = tipo
		} 
		else
		{
			this.$.select2.className = "hide"
			this.$.filtro2.className = ""
			this.tipo2 = tipo
		}	
	}
	else
	{
		if (n!= 2)
		{
			this.$.select.className = ""
			this.$.filtro.className = "hide"
			this.opts = []
			for (i=0; i< column[0].enum.length; i++)
				this.push("opts", {"op": column[0].enum[i]})
		}
		else
		{
			this.$.select2.className = ""
			this.$.filtro2.className = "hide"
			this.opts2 = []
			for (i=0; i< column[0].enum.length; i++)
				this.push("opts2", {"op": column[0].enum[i]})
		}
	}
 },
  display: function(e) {
	var filtro = {"id": Number(e.toElement.offsetParent.id)}
	var item = this.data.find(filtro)[0]
	
	this.$.Task_display_dialog.open_display_dialog(item)
  },
  edit: function(e) {
	var filtro = {"id": Number(e.toElement.offsetParent.id)}
	var item = this.data.find(filtro)[0]
	this.$.Task_edit_dialog.open_dialog(item)
  },
  delete: function(e) {
	var filtro = {"id": Number(e.toElement.offsetParent.id)}
	var item = this.data.find(filtro)[0]
	this.$.Task_delete_dialog.open_delete_dialog(item)
  },
  new: function() {
	this.$.Task_new_dialog.open_dialog()
  },
  reload: function() {
	this.$.ajax.generateRequest()
  },
  load_data: function() {
	while(this.data.data[0]) {
        this.data.remove(this.data.data[0])
      }
	for (i=0; i< this.$.ajax.lastResponse.length; i++)
	{
	  if (this.$.ajax.lastResponse[i].finicio)
		this.$.ajax.lastResponse[i].finicio = this.$.ajax.lastResponse[i].finicio.substring(0,10)
	  if (this.$.ajax.lastResponse[i].fcompromiso)	
		this.$.ajax.lastResponse[i].fcompromiso = this.$.ajax.lastResponse[i].fcompromiso.substring(0,10)
	  if (this.$.ajax.lastResponse[i].ultseguimiento)  	
		this.$.ajax.lastResponse[i].ultseguimiento = this.$.ajax.lastResponse[i].ultseguimiento.substring(0, 10)
	  if (this.$.ajax.lastResponse[i].proxseguimiento)	
		this.$.ajax.lastResponse[i].proxseguimiento = this.$.ajax.lastResponse[i].proxseguimiento.substring(0, 10)
		this.data.insert(this.$.ajax.lastResponse[i])
	}
	this.filter()
  },
  ajax_error: function() {
	console.log(this.$.ajax.lastError)
	alert("Error Procesando Solicitud: ", this.$.ajax.lastError)
  }
});
</script>
</dom-module>
<paper-material class="card" elevation="2">
	<Task-list></Task-list>
</paper-material>
