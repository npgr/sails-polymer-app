<!DOCTYPE html>
<html>
  <head>
    <title>New Sails App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/app.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body>
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <!--<script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/lokijs/benchmark/benchmark.js"></script>
    <script src="/js/lokijs/benchmark/benchmark_nedb.js"></script>
    <script src="/js/lokijs/benchmark/benchmark_pouchdb.js"></script>
    <script src="/js/lokijs/benchmark/benchmark_web.js"></script>
    <script src="/js/lokijs/benchmark/nedb.js"></script>
    <script src="/js/lokijs/benchmark/taffy.js"></script>
    <script src="/js/lokijs/build/lokiIndexedAdapter.min.js"></script>
    <script src="/js/lokijs/build/lokijs.min.js"></script>
    <script src="/js/lokijs/examples/example.js"></script>
    <script src="/js/lokijs/examples/lokiContinuum.js"></script>
    <script src="/js/lokijs/examples/sandbox/jquery-2.1.0.min.js"></script>
    <script src="/js/lokijs/examples/sandbox/sandbox.min.js"></script>
    <script src="/js/lokijs/karma.build.conf.js"></script>
    <script src="/js/lokijs/karma.conf.js"></script>
    <script src="/js/lokijs/spec/generic/changesApi.spec.js"></script>
    <script src="/js/lokijs/spec/generic/collection.spec.js"></script>
    <script src="/js/lokijs/spec/generic/eventEmitter.spec.js"></script>
    <script src="/js/lokijs/spec/generic/joins.spec.js"></script>
    <script src="/js/lokijs/spec/generic/kv.spec.js"></script>
    <script src="/js/lokijs/spec/generic/persistence.spec.js"></script>
    <script src="/js/lokijs/spec/generic/remove.spec.js"></script>
    <script src="/js/lokijs/spec/generic/stage.spec.js"></script>
    <script src="/js/lokijs/spec/generic/stats.spec.js"></script>
    <script src="/js/lokijs/spec/generic/test.spec.js"></script>
    <script src="/js/lokijs/spec/generic/typed.spec.js"></script>
    <script src="/js/lokijs/spec/generic/unique.spec.js"></script>
    <script src="/js/lokijs/spec/helpers/assert-helpers.js"></script>
    <script src="/js/lokijs/spec/node/cryptedFileAdapter.spec.js"></script>
    <script src="/js/lokijs/spec/node/nodePersistence.spec.js"></script>
    <script src="/js/lokijs/src/jquery-sync-adapter.js"></script>
    <script src="/js/lokijs/src/loki-angular.js"></script>
    <script src="/js/lokijs/src/loki-crypted-file-adapter.js"></script>
    <script src="/js/lokijs/src/loki-indexed-adapter.js"></script>
    <script src="/js/lokijs/src/lokijs.js"></script>
    <script src="/js/x2js-v1.1.5/xml2json.js"></script>
    <script src="/js/x2js-v1.1.5/xml2json.min.js"></script>-->
    <!--SCRIPTS END-->
  </body>
</html>
